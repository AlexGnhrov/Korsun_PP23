<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:Internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <FontFamily x:Key="DataFont">/#Liberation Mono</FontFamily>

    <SolidColorBrush x:Key="SecondColor" Color="#6D6ADB"/>
    <SolidColorBrush x:Key="MainColor" Color="#4845D2"/>


    <Style x:Key="ImageForIcon" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="17.5"/>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
    </Style>

    <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainColor}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="DeleteBtn">
                <Setter Property="Background" Value="#E81123"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="AddButtonCB" TargetType="Image">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Source" Value="/ResourceFolder/ImageFolder/AddBtnImageIcon.png" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="/ResourceFolder/ImageFolder/AddBtnImageIconSelected.png"/>
                <Setter Property="Height" Value="35" />
                <Setter Property="Width" Value="35" />
            </Trigger>
        </Style.Triggers>
    </Style>





    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Frame}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False"/>
    </Style>


    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="MainLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MainLabel}">
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="SearchLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource MainLabel}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>







    



    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainColor}"/>
        <Setter Property="Foreground" Value="{StaticResource MainColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2"  SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Click">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox FlowDirection="LeftToRight"
                                 Height="40" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Width="25">
                            <Canvas Height="20" Width="20">
                                <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{TemplateBinding Background}"/>
                                <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Canvas>
                        </Viewbox>
                        <ContentPresenter x:Name="contentPresenter"   ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding (materialDesign:RippleAssist.IsDisabled), RelativeSource={RelativeSource Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                            <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56"/>
                            <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Data" TargetName="Graphic" Value="M6,13L6,11 18,11 18,13 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                            <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>


    <Style TargetType="{x:Type ListView}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush"  Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    </Style>




    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border  Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" >
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="IsSelected" Value="True"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#4CACACAC"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="AddEditTextBox" TargetType="{x:Type TextBoxBase}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="3"/>
            </Grid.RowDefinitions>
            <ScrollViewer x:Name="PART_ContentHost" 
                          Focusable="False" 
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden" Margin="5,0,5,-10"/>
            <Border Background="{StaticResource MaterialDesignBody}" Grid.Row="1" CornerRadius="2"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"  Value="0.56"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>








    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="Transparent"/>

    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#15696969"/>

    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="DimGray"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="3"/>
                        </Grid.RowDefinitions>

                        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" CornerRadius="10,10,0,0"   Grid.RowSpan="1">
                            <Border x:Name="splitBorder"  Background="Transparent" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"  SnapsToDevicePixels="true" Margin="0,0,10,0" HorizontalAlignment="Right" >
                                <Image x:Name="arrow" Source="/ResourceFolder/ImageFolder/ArrowCBIcon.png"  VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center"/>
                            </Border>
                        </Border >

                        <Border Grid.Row="1"  Background="{TemplateBinding BorderBrush}" Height="3"  VerticalAlignment="Bottom" CornerRadius="2"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Source" TargetName="arrow" Value="/ResourceFolder/ImageFolder/ArrowCBIconUP.png"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Opacity" Value="0.17"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"  AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" CornerRadius="5,5,5,5"  
                            BorderBrush="{StaticResource MaterialDesignBody}" BorderThickness="1,1,1,1"                    
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer" Background="{x:Null}" Margin="5,5,5,5" >
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"  VerticalAlignment="Top" Width="0">
                                    <Border x:Name="opaqueRect" Background="{Binding Background, ElementName=dropDownBorder}"
                                            CornerRadius="{Binding CornerRadius, ElementName=dropDownBorder}"
                                            BorderThickness="0" BorderBrush="Black"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Placement" SourceName="PART_Popup" Value="Top">
                <Setter Property="CornerRadius" TargetName="dropDownBorder" Value="5,0,0,0"/>
                <Setter Property="Background" TargetName="dropDownBorder" Value="red"/>
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="7,0"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MaxDropDownHeight" Value="250"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource MainColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Opacity" Value="0.56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#a4606060"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#4CACACAC"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#4CACACAC"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FFACACAC"/>


    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="10,1"/>

        <Setter Property="Margin" Value="3,2"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Calendar}">
                    <Setter Property="Margin" Value="16,8,16,24"/>
                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp12"/>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Calendar}">
                            <Setter Property="CalendarItemStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type CalendarItem}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type CalendarItem}">
                                                    <ControlTemplate.Resources>
                                                        <CubicEase x:Key="EasingFunctionIn" EasingMode="EaseIn"/>
                                                        <SineEase x:Key="EasingFunction" EasingMode="EaseOut"/>
                                                        <DataTemplate x:Key="{ComponentResourceKey ResourceId=DayTitleTemplate, TypeInTargetAssembly={x:Type CalendarItem}}">
                                                            <TextBlock FontWeight="Bold" FontSize="9.5" HorizontalAlignment="Center" Margin="0,6" Opacity="0.65" Text="{Binding [0]}" VerticalAlignment="Center"/>
                                                        </DataTemplate>
                                                    </ControlTemplate.Resources>
                                                    <Grid x:Name="PART_Root">
                                                        <Grid.Resources>
                                                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
                                                        </Grid.Resources>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal"/>
                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <materialDesign:Card Background="{TemplateBinding Background}" ClipContent="True" materialDesign:ElevationAssist.Elevation="{TemplateBinding materialDesign:ElevationAssist.Elevation}" Padding="0,-1,0,0" UniformCornerRadius="2">
                                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                <Grid.Resources>
                                                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal"/>
                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="0.56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                <Viewbox Height="12" Margin="8">
                                                                                    <Path x:Name="path" Data="M15.41,16.58L10.83,12 15.41,7.41 14,6 8,12 14,18 15.41,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                </Viewbox>
                                                                            </materialDesign:Ripple>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                    <materialDesign:CalendarYearMonthConverter x:Key="CalendarYearMonthConverter"/>
                                                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal"/>
                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                    <VisualState x:Name="Disabled"/>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <materialDesign:MaterialDateDisplay x:Name="buttonContent" Foreground="{TemplateBinding Foreground}" IsEnabled="{TemplateBinding IsEnabled}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}">
                                                                                <materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                    <MultiBinding Mode="OneWay" UpdateSourceTrigger="Default">
                                                                                        <MultiBinding.Converter>
                                                                                            <materialDesign:CalendarDateCoalesceConverter/>
                                                                                        </MultiBinding.Converter>
                                                                                        <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                        <Binding Path="SelectedDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                    </MultiBinding>
                                                                                </materialDesign:MaterialDateDisplay.DisplayDate>
                                                                            </materialDesign:MaterialDateDisplay>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal"/>
                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                <Viewbox Height="12" Margin="8">
                                                                                    <Path x:Name="path" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                </Viewbox>
                                                                            </materialDesign:Ripple>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Grid.Resources>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Border x:Name="HeaderBorder" Background="{TemplateBinding materialDesign:CalendarAssist.HeaderBackground}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" Grid.RowSpan="1"/>
                                                                <Button x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Grid.Column="0" Foreground="{TemplateBinding materialDesign:CalendarAssist.HeaderForeground}" FontWeight="Bold" Focusable="False"
                                                                        FontSize="10.5" HorizontalAlignment="Left" Height="Auto" Margin="20,15" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}" Grid.Row="0" Grid.RowSpan="1" VerticalAlignment="Center">
                                                                    <Button.Template>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid Cursor="Hand">
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver"/>
                                                                                        <VisualState x:Name="Disabled"/>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <materialDesign:MaterialDateDisplay x:Name="buttonContent" Foreground="{TemplateBinding Foreground}" IsEnabled="{TemplateBinding IsEnabled}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}">
                                                                                    <materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                        <MultiBinding Mode="OneWay" UpdateSourceTrigger="Default">
                                                                                            <MultiBinding.Converter>
                                                                                                <materialDesign:CalendarDateCoalesceConverter/>
                                                                                            </MultiBinding.Converter>
                                                                                            <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                            <Binding Path="SelectedDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                        </MultiBinding>
                                                                                    </materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                </materialDesign:MaterialDateDisplay>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Button.Template>
                                                                    <Button.Visibility>
                                                                        <TemplateBinding Property="materialDesign:CalendarAssist.IsHeaderVisible">
                                                                            <TemplateBinding.Converter>
                                                                                <materialDesign:BooleanToVisibilityConverter FalseValue="Collapsed" TrueValue="Visible"/>
                                                                            </TemplateBinding.Converter>
                                                                        </TemplateBinding>
                                                                    </Button.Visibility>
                                                                </Button>
                                                                <TextBlock x:Name="CurrentDateTextBlock" Grid.Column="1" FontWeight="SemiBold" FontSize="14" HorizontalAlignment="Left" Margin="13,8,8,8" Opacity="0.56" Grid.Row="1" RenderTransformOrigin="0,0.5" VerticalAlignment="Center">
                                                                    <TextBlock.RenderTransform>
                                                                        <TranslateTransform X="0" Y="0"/>
                                                                    </TextBlock.RenderTransform>
                                                                    <TextBlock.Text>
                                                                        <MultiBinding UpdateSourceTrigger="Default">
                                                                            <MultiBinding.Converter>
                                                                                <materialDesign:CalendarYearMonthConverter/>
                                                                            </MultiBinding.Converter>
                                                                            <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                            <Binding Path="Language" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                        </MultiBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                                <Button x:Name="PART_PreviousButton" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Height="36" Margin="3,0" Opacity="0.56" Grid.Row="1" Width="32">
                                                                    <Button.Template>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid Cursor="Hand">
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver"/>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="0.56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <Viewbox Height="12" Margin="8">
                                                                                        <Path x:Name="path" Data="M15.41,16.58L10.83,12 15.41,7.41 14,6 8,12 14,18 15.41,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                    </Viewbox>
                                                                                </materialDesign:Ripple>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Button.Template>
                                                                </Button>
                                                                <Button x:Name="PART_NextButton" Grid.Column="3" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Right" Height="36" Margin="3,0" Opacity="0.56" Grid.Row="1" Width="32">
                                                                    <Button.Template>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid Cursor="Hand">
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver"/>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <Viewbox Height="12" Margin="8">
                                                                                        <Path x:Name="path" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                    </Viewbox>
                                                                                </materialDesign:Ripple>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Button.Template>
                                                                </Button>
                                                                <Grid x:Name="MonthViewWrapperGrid" Grid.ColumnSpan="3" Grid.Column="1" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="2" VerticalAlignment="Top">
                                                                    <Border x:Name="PART_MonthViewCopy" Margin="4,7,4,3" Opacity="0" RenderTransformOrigin="0,0.5">
                                                                        <Border.Background>
                                                                            <VisualBrush Stretch="UniformToFill" Visual="{Binding ElementName=PART_MonthView}"/>
                                                                        </Border.Background>
                                                                        <Border.RenderTransform>
                                                                            <TranslateTransform X="0"/>
                                                                        </Border.RenderTransform>
                                                                    </Border>
                                                                    <Grid x:Name="PART_MonthView" Grid.IsSharedSizeScope="True" Opacity="1" RenderTransformOrigin="0,0.5">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                            <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.RenderTransform>
                                                                            <TranslateTransform X="0"/>
                                                                        </Grid.RenderTransform>
                                                                    </Grid>
                                                                </Grid>
                                                                <Grid x:Name="YearViewWrapperGrid" Grid.ColumnSpan="3" Grid.Column="1" Margin="6,-3,7,6" Grid.Row="2" Visibility="Hidden">
                                                                    <Border x:Name="PART_YearViewCopy" Margin="2" Opacity="0" RenderTransformOrigin="0,0.5">
                                                                        <Border.Background>
                                                                            <VisualBrush Stretch="UniformToFill" Visual="{Binding ElementName=PART_YearView}"/>
                                                                        </Border.Background>
                                                                        <Border.RenderTransform>
                                                                            <TranslateTransform X="0"/>
                                                                        </Border.RenderTransform>
                                                                    </Border>
                                                                    <Grid x:Name="PART_YearView" RenderTransformOrigin="0,0.5">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.RenderTransform>
                                                                            <TranslateTransform X="0"/>
                                                                        </Grid.RenderTransform>
                                                                    </Grid>
                                                                </Grid>
                                                            </Grid>
                                                        </materialDesign:Card>
                                                        <Rectangle x:Name="PART_DisabledVisual" Fill="White" Opacity="0.5" RadiusY="2" RadiusX="2" Stretch="Fill" Visibility="Collapsed"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}" Value="Year">
                                                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                                                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}" Value="Decade">
                                                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                                                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                                                        </DataTrigger>
                                                        <Trigger Property="materialDesign:CalendarAssist.Orientation" Value="Horizontal">
                                                            <Setter Property="Grid.ColumnSpan" TargetName="HeaderBorder" Value="1"/>
                                                            <Setter Property="Grid.RowSpan" TargetName="HeaderBorder" Value="3"/>
                                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_HeaderButton" Value="1"/>
                                                            <Setter Property="Grid.RowSpan" TargetName="PART_HeaderButton" Value="3"/>
                                                        </Trigger>
                                                        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="PART_NextButton">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation AccelerationRatio="0.1" DecelerationRatio="0.89" Duration="0:0:0.45" From="240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="CurrentDateTextBlock">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <SineEase EasingMode="EaseOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                    <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="-270" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="270" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthView"/>
                                                                    <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="-240" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearView"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="PART_PreviousButton">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation AccelerationRatio="0.1" DecelerationRatio="0.89" Duration="0:0:0.45" From="-240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="CurrentDateTextBlock">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <SineEase EasingMode="EaseOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                    <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="270" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="-270" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthView"/>
                                                                    <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="240" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                    <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="-240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearView"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Calendar}">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                                    <Setter Property="CalendarButtonStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type CalendarButton}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="Height" Value="48"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="Margin" Value="2"/>
                                                <Setter Property="MinHeight" Value="5"/>
                                                <Setter Property="MinWidth" Value="5"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type CalendarButton}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                                <DoubleAnimation Duration="0" To="0.38" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="SelectionStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Unselected"/>
                                                                        <VisualState x:Name="Selected">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="CalendarButtonFocused">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="CalendarButtonUnfocused">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Collapsed</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="ActiveStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Active"/>
                                                                        <VisualState x:Name="Inactive"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Rectangle x:Name="TodayBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                                <Rectangle x:Name="HighlightBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding materialDesign:CalendarAssist.SelectionForegroundColor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Rectangle x:Name="DayButtonFocusVisual" Height="30" Opacity="0" RadiusY="15" RadiusX="15" Stroke="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" StrokeThickness="1" Visibility="Collapsed"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="HasSelectedDays" Value="False">
                                                                    <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsInactive" Value="True">
                                                                    <Setter Property="Opacity" TargetName="NormalText" Value="0.56"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Width" Value="48"/>
                                                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource MaterialDesignBody}"/>
                                                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="CalendarDayButtonStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type CalendarDayButton}">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="Height" Value="28"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="Margin" Value="2"/>
                                                <Setter Property="MinHeight" Value="5"/>
                                                <Setter Property="MinWidth" Value="5"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightingBorder"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightingBorder"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="SelectionStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Unselected"/>
                                                                        <VisualState x:Name="Selected">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="CalendarButtonFocused">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="CalendarButtonUnfocused">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Collapsed</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="ActiveStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Active"/>
                                                                        <VisualState x:Name="Inactive"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="DayStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="RegularDay"/>
                                                                        <VisualState x:Name="Today">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="BlackoutDayStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="NormalDay"/>
                                                                        <VisualState x:Name="BlackoutDay">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Ellipse x:Name="TodayBackground" Fill="Transparent" Opacity="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                                                                <Ellipse x:Name="SelectedBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Opacity="0"/>
                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                                <Border x:Name="HighlightingBorder" Opacity="0">
                                                                    <Ellipse x:Name="HighlightBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Opacity="1"/>
                                                                </Border>
                                                                <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding materialDesign:CalendarAssist.SelectionForegroundColor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Ellipse x:Name="DayButtonFocusVisual" Opacity="0" Stroke="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" StrokeThickness="1" Visibility="Collapsed"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="False">
                                                                    <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsInactive" Value="True">
                                                                    <Setter Property="Opacity" TargetName="NormalText" Value="0.56"/>
                                                                </Trigger>
                                                                <Trigger Property="IsBlackedOut" Value="True">
                                                                    <Setter Property="Opacity" TargetName="NormalText" Value="0.38"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Width" Value="28"/>
                                                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource MainColor}"/>
                                                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsBlackedOut" Value="True">
                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Calendar}">
                                                <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" materialDesign:ElevationAssist.Elevation="{TemplateBinding materialDesign:ElevationAssist.Elevation}" Foreground="{TemplateBinding Foreground}" materialDesign:CalendarAssist.HeaderForeground="{TemplateBinding materialDesign:CalendarAssist.HeaderForeground}" materialDesign:CalendarAssist.HeaderBackground="{TemplateBinding materialDesign:CalendarAssist.HeaderBackground}" materialDesign:CalendarAssist.IsHeaderVisible="{TemplateBinding materialDesign:CalendarAssist.IsHeaderVisible}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}" Style="{TemplateBinding CalendarItemStyle}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="{StaticResource MainColor}"/>
                                    <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                    <Setter Property="materialDesign:CalendarAssist.Orientation" Value="Vertical"/>
                                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <ControlTemplate.Resources>
                        <ControlTemplate x:Key="CalendarButtonTemplate" TargetType="{x:Type Button}">
                            <materialDesign:PackIcon Background="Transparent" Foreground="{TemplateBinding Foreground}" Kind="InsertInvitation" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="3"/>
                        </Grid.RowDefinitions>
                        <DatePickerTextBox x:Name="PART_TextBox" Grid.RowSpan="2"
                                           Background="{TemplateBinding Background}" Foreground="{StaticResource MaterialDesignBody}"
                                           materialDesign:TextFieldAssist.DecorationVisibility="{TemplateBinding materialDesign:TextFieldAssist.DecorationVisibility}"
                                           materialDesign:HintAssist.FloatingScale="{TemplateBinding materialDesign:HintAssist.FloatingScale}"
                                           materialDesign:HintAssist.Foreground="{StaticResource MaterialDesignBody}"
                                           materialDesign:HintAssist.FloatingOffset="{TemplateBinding materialDesign:HintAssist.FloatingOffset}"
                                           Focusable="{TemplateBinding Focusable}" Margin="5,0"
                                           materialDesign:HintAssist.FontFamily="{TemplateBinding materialDesign:HintAssist.FontFamily}"
                                           materialDesign:TextFieldAssist.HasOutlinedTextField="{TemplateBinding materialDesign:TextFieldAssist.HasOutlinedTextField}"
                                           materialDesign:HintAssist.HelperTextStyle="{TemplateBinding materialDesign:HintAssist.HelperTextStyle}"
                                           materialDesign:TextFieldAssist.HasFilledTextField="{TemplateBinding materialDesign:TextFieldAssist.HasFilledTextField}"
                                           materialDesign:HintAssist.Hint="{TemplateBinding materialDesign:HintAssist.Hint}"
                                           materialDesign:HintAssist.HelperTextFontSize="{TemplateBinding materialDesign:HintAssist.HelperTextFontSize}"
                                           materialDesign:HintAssist.HintOpacity="{TemplateBinding materialDesign:HintAssist.HintOpacity}"
                                           materialDesign:HintAssist.HelperText="{TemplateBinding materialDesign:HintAssist.HelperText}"
                                           HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           materialDesign:TextFieldAssist.HasClearButton="{TemplateBinding materialDesign:TextFieldAssist.HasClearButton}"
                                           materialDesign:HintAssist.IsFloating="{TemplateBinding materialDesign:HintAssist.IsFloating}"
                                           materialDesign:TextFieldAssist.NewSpecHighlightingEnabled="{TemplateBinding materialDesign:TextFieldAssist.NewSpecHighlightingEnabled}"
                                           materialDesign:TextFieldAssist.PrefixText="{TemplateBinding materialDesign:TextFieldAssist.PrefixText}"
                                           materialDesign:TextFieldAssist.RippleOnFocusEnabled="{TemplateBinding materialDesign:TextFieldAssist.RippleOnFocusEnabled}"
                                           Style="{DynamicResource MaterialDesignDatePickerTextBox}"
                                           materialDesign:TextFieldAssist.SuffixText="{TemplateBinding materialDesign:TextFieldAssist.SuffixText}"
                                           materialDesign:TextFieldAssist.TextFieldCornerRadius="{TemplateBinding materialDesign:TextFieldAssist.TextFieldCornerRadius}"
                                           materialDesign:TextFieldAssist.TextBoxViewMargin="{TemplateBinding materialDesign:TextFieldAssist.TextBoxViewMargin}"
                                           materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                           materialDesign:TextFieldAssist.UnderlineCornerRadius="0"
                                           VerticalAlignment="Stretch"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           CaretBrush="Black" BorderThickness="0">
                        </DatePickerTextBox>

                        <Border x:Name="UnderBorder" Background="{TemplateBinding BorderBrush}" CornerRadius="2" Grid.Row="1" Height="3"/>

                        <Button x:Name="PART_Button" Foreground="{TemplateBinding BorderBrush}"  Grid.RowSpan="2" Focusable="False" HorizontalAlignment="Right" Height="14" Margin="10,0">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <materialDesign:PackIcon Background="Transparent" Foreground="{TemplateBinding Foreground}" Kind="InsertInvitation" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.VerticalAlignment>
                                <TemplateBinding Property="VerticalContentAlignment">
                                    <TemplateBinding.Converter>
                                        <materialDesign:VerticalAlignmentConverter StretchReplacement="Top"/>
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Button.VerticalAlignment>
                        </Button>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" PopupAnimation="Scroll"
                               VerticalAlignment="Top" Placement="Bottom"
                               HorizontalAlignment="Right"  StaysOpen="False"/>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="PART_Button" Value="True">
                            <Setter Property="Foreground"  Value="#4845D2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Button" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen"  Value="True">
                            <Setter Property="Foreground" TargetName="PART_Button" Value="#4845D2"/>
                            <Setter Property="BorderBrush"  Value="#4845D2"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" SourceName="PART_TextBox" Value="True"/>
                                <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="{StaticResource MaterialDesignBody}"/>
                        </MultiTrigger>
                        <Trigger Property="materialDesign:CalendarAssist.IsHeaderVisible" Value="False">
                            <Setter Property="CalendarStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type Calendar}">
                                        <Setter Property="materialDesign:CalendarAssist.IsHeaderVisible" Value="False"/>
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type Calendar}">
                                                <Setter Property="Margin" Value="16,8,16,24"/>
                                                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp12"/>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type Calendar}">
                                                        <Setter Property="CalendarItemStyle">
                                                            <Setter.Value>
                                                                <Style TargetType="{x:Type CalendarItem}">
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type CalendarItem}">
                                                                                <ControlTemplate.Resources>
                                                                                    <CubicEase x:Key="EasingFunctionIn" EasingMode="EaseIn"/>
                                                                                    <SineEase x:Key="EasingFunction" EasingMode="EaseOut"/>
                                                                                    <DataTemplate x:Key="{ComponentResourceKey ResourceId=DayTitleTemplate, TypeInTargetAssembly={x:Type CalendarItem}}">
                                                                                        <TextBlock FontWeight="Bold" FontSize="9.5" HorizontalAlignment="Center" Margin="0,6" Opacity="0.65" Text="{Binding [0]}" VerticalAlignment="Center"/>
                                                                                    </DataTemplate>
                                                                                </ControlTemplate.Resources>
                                                                                <Grid x:Name="PART_Root">
                                                                                    <Grid.Resources>
                                                                                        <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
                                                                                    </Grid.Resources>
                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                            <VisualState x:Name="Normal"/>
                                                                                            <VisualState x:Name="Disabled">
                                                                                                <Storyboard>
                                                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                        </VisualStateGroup>
                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                    <materialDesign:Card Background="{TemplateBinding Background}" ClipContent="True" materialDesign:ElevationAssist.Elevation="{TemplateBinding materialDesign:ElevationAssist.Elevation}" Padding="0,-1,0,0" UniformCornerRadius="2">
                                                                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Grid.Resources>
                                                                                                <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                                                                    <Grid Cursor="Hand">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver"/>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimation Duration="0" To="0.56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                                            <Viewbox Height="12" Margin="8">
                                                                                                                <Path x:Name="path" Data="M15.41,16.58L10.83,12 15.41,7.41 14,6 8,12 14,18 15.41,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                                            </Viewbox>
                                                                                                        </materialDesign:Ripple>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                                <materialDesign:CalendarYearMonthConverter x:Key="CalendarYearMonthConverter"/>
                                                                                                <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                                                                                    <Grid Cursor="Hand">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver"/>
                                                                                                                <VisualState x:Name="Disabled"/>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <materialDesign:MaterialDateDisplay x:Name="buttonContent" Foreground="{TemplateBinding Foreground}" IsEnabled="{TemplateBinding IsEnabled}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}">
                                                                                                            <materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                                                <MultiBinding Mode="OneWay" UpdateSourceTrigger="Default">
                                                                                                                    <MultiBinding.Converter>
                                                                                                                        <materialDesign:CalendarDateCoalesceConverter/>
                                                                                                                    </MultiBinding.Converter>
                                                                                                                    <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                                    <Binding Path="SelectedDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                                </MultiBinding>
                                                                                                            </materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                                        </materialDesign:MaterialDateDisplay>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                                <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                                                                    <Grid Cursor="Hand">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver"/>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                                            <Viewbox Height="12" Margin="8">
                                                                                                                <Path x:Name="path" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                                            </Viewbox>
                                                                                                        </materialDesign:Ripple>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Grid.Resources>
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="Auto"/>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                                <ColumnDefinition Width="Auto"/>
                                                                                                <ColumnDefinition Width="Auto"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Grid.RowDefinitions>
                                                                                                <RowDefinition Height="Auto"/>
                                                                                                <RowDefinition Height="Auto"/>
                                                                                                <RowDefinition Height="*"/>
                                                                                            </Grid.RowDefinitions>
                                                                                            <Border x:Name="HeaderBorder" Background="{TemplateBinding materialDesign:CalendarAssist.HeaderBackground}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" Grid.RowSpan="1"/>
                                                                                            <Button x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Grid.Column="0" Foreground="{TemplateBinding materialDesign:CalendarAssist.HeaderForeground}" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Left" Height="Auto" Margin="20,15" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}" Grid.Row="0" Grid.RowSpan="1" VerticalAlignment="Center">
                                                                                                <Button.Template>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Grid Cursor="Hand">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                                                    <VisualState x:Name="Disabled"/>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <materialDesign:MaterialDateDisplay x:Name="buttonContent" Foreground="{TemplateBinding Foreground}" IsEnabled="{TemplateBinding IsEnabled}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}">
                                                                                                                <materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                                                    <MultiBinding Mode="OneWay" UpdateSourceTrigger="Default">
                                                                                                                        <MultiBinding.Converter>
                                                                                                                            <materialDesign:CalendarDateCoalesceConverter/>
                                                                                                                        </MultiBinding.Converter>
                                                                                                                        <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                                        <Binding Path="SelectedDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                                    </MultiBinding>
                                                                                                                </materialDesign:MaterialDateDisplay.DisplayDate>
                                                                                                            </materialDesign:MaterialDateDisplay>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Button.Template>
                                                                                                <Button.Visibility>
                                                                                                    <TemplateBinding Property="materialDesign:CalendarAssist.IsHeaderVisible">
                                                                                                        <TemplateBinding.Converter>
                                                                                                            <materialDesign:BooleanToVisibilityConverter FalseValue="Collapsed" TrueValue="Visible"/>
                                                                                                        </TemplateBinding.Converter>
                                                                                                    </TemplateBinding>
                                                                                                </Button.Visibility>
                                                                                            </Button>
                                                                                            <TextBlock x:Name="CurrentDateTextBlock" Grid.Column="1" FontWeight="SemiBold" FontSize="14" HorizontalAlignment="Left" Margin="13,8,8,8" Opacity="0.56" Grid.Row="1" RenderTransformOrigin="0,0.5" VerticalAlignment="Center">
                                                                                                <TextBlock.RenderTransform>
                                                                                                    <TranslateTransform X="0" Y="0"/>
                                                                                                </TextBlock.RenderTransform>
                                                                                                <TextBlock.Text>
                                                                                                    <MultiBinding UpdateSourceTrigger="Default">
                                                                                                        <MultiBinding.Converter>
                                                                                                            <materialDesign:CalendarYearMonthConverter/>
                                                                                                        </MultiBinding.Converter>
                                                                                                        <Binding Path="DisplayDate" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                        <Binding Path="Language" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}"/>
                                                                                                    </MultiBinding>
                                                                                                </TextBlock.Text>
                                                                                            </TextBlock>
                                                                                            <Button x:Name="PART_PreviousButton" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Height="36" Margin="3,0" Opacity="0.56" Grid.Row="1" Width="32">
                                                                                                <Button.Template>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Grid Cursor="Hand">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                                                    <VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimation Duration="0" To="0.56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                                                <Viewbox Height="12" Margin="8">
                                                                                                                    <Path x:Name="path" Data="M15.41,16.58L10.83,12 15.41,7.41 14,6 8,12 14,18 15.41,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                                                </Viewbox>
                                                                                                            </materialDesign:Ripple>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Button.Template>
                                                                                            </Button>
                                                                                            <Button x:Name="PART_NextButton" Grid.Column="3" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Right" Height="36" Margin="3,0" Opacity="0.56" Grid.Row="1" Width="32">
                                                                                                <Button.Template>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Grid Cursor="Hand">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                                    <VisualState x:Name="MouseOver"/>
                                                                                                                    <VisualState x:Name="Disabled">
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <materialDesign:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                                                <Viewbox Height="12" Margin="8">
                                                                                                                    <Path x:Name="path" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                                                                </Viewbox>
                                                                                                            </materialDesign:Ripple>
                                                                                                        </Grid>
                                                                                                    </ControlTemplate>
                                                                                                </Button.Template>
                                                                                            </Button>
                                                                                            <Grid x:Name="MonthViewWrapperGrid" Grid.ColumnSpan="3" Grid.Column="1" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="2" VerticalAlignment="Top">
                                                                                                <Border x:Name="PART_MonthViewCopy" Margin="4,7,4,3" Opacity="0" RenderTransformOrigin="0,0.5">
                                                                                                    <Border.Background>
                                                                                                        <VisualBrush Stretch="UniformToFill" Visual="{Binding ElementName=PART_MonthView}"/>
                                                                                                    </Border.Background>
                                                                                                    <Border.RenderTransform>
                                                                                                        <TranslateTransform X="0"/>
                                                                                                    </Border.RenderTransform>
                                                                                                </Border>
                                                                                                <Grid x:Name="PART_MonthView" Grid.IsSharedSizeScope="True" Opacity="1" RenderTransformOrigin="0,0.5">
                                                                                                    <Grid.ColumnDefinitions>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                                    </Grid.ColumnDefinitions>
                                                                                                    <Grid.RowDefinitions>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                        <RowDefinition SharedSizeGroup="WeekRow"/>
                                                                                                    </Grid.RowDefinitions>
                                                                                                    <Grid.RenderTransform>
                                                                                                        <TranslateTransform X="0"/>
                                                                                                    </Grid.RenderTransform>
                                                                                                </Grid>
                                                                                            </Grid>
                                                                                            <Grid x:Name="YearViewWrapperGrid" Grid.ColumnSpan="3" Grid.Column="1" Margin="6,-3,7,6" Grid.Row="2" Visibility="Hidden">
                                                                                                <Border x:Name="PART_YearViewCopy" Margin="2" Opacity="0" RenderTransformOrigin="0,0.5">
                                                                                                    <Border.Background>
                                                                                                        <VisualBrush Stretch="UniformToFill" Visual="{Binding ElementName=PART_YearView}"/>
                                                                                                    </Border.Background>
                                                                                                    <Border.RenderTransform>
                                                                                                        <TranslateTransform X="0"/>
                                                                                                    </Border.RenderTransform>
                                                                                                </Border>
                                                                                                <Grid x:Name="PART_YearView" RenderTransformOrigin="0,0.5">
                                                                                                    <Grid.ColumnDefinitions>
                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                        <ColumnDefinition Width="*"/>
                                                                                                    </Grid.ColumnDefinitions>
                                                                                                    <Grid.RowDefinitions>
                                                                                                        <RowDefinition Height="*"/>
                                                                                                        <RowDefinition Height="*"/>
                                                                                                        <RowDefinition Height="*"/>
                                                                                                    </Grid.RowDefinitions>
                                                                                                    <Grid.RenderTransform>
                                                                                                        <TranslateTransform X="0"/>
                                                                                                    </Grid.RenderTransform>
                                                                                                </Grid>
                                                                                            </Grid>
                                                                                        </Grid>
                                                                                    </materialDesign:Card>
                                                                                    <Rectangle x:Name="PART_DisabledVisual" Fill="White" Opacity="0.5" RadiusY="2" RadiusX="2" Stretch="Fill" Visibility="Collapsed"/>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                                                                                    </Trigger>
                                                                                    <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}" Value="Year">
                                                                                        <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                                                                                        <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                                                                                    </DataTrigger>
                                                                                    <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}" Value="Decade">
                                                                                        <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                                                                                        <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                                                                                    </DataTrigger>
                                                                                    <Trigger Property="materialDesign:CalendarAssist.Orientation" Value="Horizontal">
                                                                                        <Setter Property="Grid.ColumnSpan" TargetName="HeaderBorder" Value="1"/>
                                                                                        <Setter Property="Grid.RowSpan" TargetName="HeaderBorder" Value="3"/>
                                                                                        <Setter Property="Grid.ColumnSpan" TargetName="PART_HeaderButton" Value="1"/>
                                                                                        <Setter Property="Grid.RowSpan" TargetName="PART_HeaderButton" Value="3"/>
                                                                                    </Trigger>
                                                                                    <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="PART_NextButton">
                                                                                        <BeginStoryboard>
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation AccelerationRatio="0.1" DecelerationRatio="0.89" Duration="0:0:0.45" From="240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="CurrentDateTextBlock">
                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                        <SineEase EasingMode="EaseOut"/>
                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                </DoubleAnimation>
                                                                                                <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="-270" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="270" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthView"/>
                                                                                                <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="-240" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearView"/>
                                                                                            </Storyboard>
                                                                                        </BeginStoryboard>
                                                                                    </EventTrigger>
                                                                                    <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="PART_PreviousButton">
                                                                                        <BeginStoryboard>
                                                                                            <Storyboard>
                                                                                                <DoubleAnimation AccelerationRatio="0.1" DecelerationRatio="0.89" Duration="0:0:0.45" From="-240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="CurrentDateTextBlock">
                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                        <SineEase EasingMode="EaseOut"/>
                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                </DoubleAnimation>
                                                                                                <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="270" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="-270" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_MonthView"/>
                                                                                                <DoubleAnimation Duration="0:0:0.45" From="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="0" To="240" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearViewCopy"/>
                                                                                                <DoubleAnimation AccelerationRatio="0.3" DecelerationRatio="0.69" Duration="0:0:0.45" From="-240" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PART_YearView"/>
                                                                                            </Storyboard>
                                                                                        </BeginStoryboard>
                                                                                    </EventTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Calendar}">
                                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                                                                <Setter Property="CalendarButtonStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type CalendarButton}">
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Cursor" Value="Hand"/>
                                                                            <Setter Property="FontSize" Value="12"/>
                                                                            <Setter Property="Height" Value="48"/>
                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Margin" Value="2"/>
                                                                            <Setter Property="MinHeight" Value="5"/>
                                                                            <Setter Property="MinWidth" Value="5"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                                                                                        <Grid>
                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                    <VisualState x:Name="MouseOver">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Pressed">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Disabled">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                                                            <DoubleAnimation Duration="0" To="0.38" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="SelectionStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Unselected"/>
                                                                                                    <VisualState x:Name="Selected">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="CalendarButtonFocused">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="CalendarButtonUnfocused">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Visibility>Collapsed</Visibility>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="ActiveStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Active"/>
                                                                                                    <VisualState x:Name="Inactive"/>
                                                                                                </VisualStateGroup>
                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                            <Rectangle x:Name="TodayBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                                            <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                                                            <Rectangle x:Name="HighlightBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Height="30" Opacity="0" RadiusY="15" RadiusX="15"/>
                                                                                            <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding materialDesign:CalendarAssist.SelectionForegroundColor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                            <Rectangle x:Name="DayButtonFocusVisual" Height="30" Opacity="0" RadiusY="15" RadiusX="15" Stroke="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="HasSelectedDays" Value="False">
                                                                                                <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsInactive" Value="True">
                                                                                                <Setter Property="Opacity" TargetName="NormalText" Value="0.56"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Width" Value="48"/>
                                                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource MaterialDesignBody}"/>
                                                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="CalendarDayButtonStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type CalendarDayButton}">
                                                                            <Setter Property="Cursor" Value="Hand"/>
                                                                            <Setter Property="FontSize" Value="12"/>
                                                                            <Setter Property="Height" Value="28"/>
                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Margin" Value="2"/>
                                                                            <Setter Property="MinHeight" Value="5"/>
                                                                            <Setter Property="MinWidth" Value="5"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                                                                                        <Grid>
                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                    <VisualState x:Name="MouseOver">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightingBorder"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Pressed">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightingBorder"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="SelectionStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Unselected"/>
                                                                                                    <VisualState x:Name="Selected">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="CalendarButtonFocused">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Visibility>Visible</Visibility>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="CalendarButtonUnfocused">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Visibility>Collapsed</Visibility>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="ActiveStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="Active"/>
                                                                                                    <VisualState x:Name="Inactive"/>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="DayStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="RegularDay"/>
                                                                                                    <VisualState x:Name="Today">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="BlackoutDayStates">
                                                                                                    <VisualStateGroup.Transitions>
                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                                                    </VisualStateGroup.Transitions>
                                                                                                    <VisualState x:Name="NormalDay"/>
                                                                                                    <VisualState x:Name="BlackoutDay">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                            <Ellipse x:Name="TodayBackground" Fill="Transparent" Opacity="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                                                                                            <Ellipse x:Name="SelectedBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Opacity="0"/>
                                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                                                            <Border x:Name="HighlightingBorder" Opacity="0">
                                                                                                <Ellipse x:Name="HighlightBackground" Fill="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" Opacity="1"/>
                                                                                            </Border>
                                                                                            <ContentPresenter x:Name="NormalText" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" TextElement.Foreground="{TemplateBinding materialDesign:CalendarAssist.SelectionForegroundColor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                            <Ellipse x:Name="DayButtonFocusVisual" Opacity="0" Stroke="{TemplateBinding materialDesign:CalendarAssist.SelectionColor}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsSelected" Value="False">
                                                                                                <Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsInactive" Value="True">
                                                                                                <Setter Property="Opacity" TargetName="NormalText" Value="0.56"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsBlackedOut" Value="True">
                                                                                                <Setter Property="Opacity" TargetName="NormalText" Value="0.38"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Width" Value="28"/>
                                                                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource MaterialDesignBody}"/>
                                                                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                            <Style.Triggers>
                                                                                <Trigger Property="IsBlackedOut" Value="True">
                                                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Calendar}">
                                                                            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" materialDesign:ElevationAssist.Elevation="{TemplateBinding materialDesign:ElevationAssist.Elevation}" Foreground="{TemplateBinding Foreground}" materialDesign:CalendarAssist.HeaderForeground="{TemplateBinding materialDesign:CalendarAssist.HeaderForeground}" materialDesign:CalendarAssist.HeaderBackground="{TemplateBinding materialDesign:CalendarAssist.HeaderBackground}" materialDesign:CalendarAssist.IsHeaderVisible="{TemplateBinding materialDesign:CalendarAssist.IsHeaderVisible}" materialDesign:CalendarAssist.Orientation="{TemplateBinding materialDesign:CalendarAssist.Orientation}" Style="{TemplateBinding CalendarItemStyle}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="{StaticResource MaterialDesignBody}"/>
                                                                <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                <Setter Property="materialDesign:CalendarAssist.Orientation" Value="Vertical"/>
                                                                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"/>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignValidationErrorBrush}"/>
                            <Setter Property="materialDesign:ValidationAssist.HasError" TargetName="PART_TextBox" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Internal:ClearText.HandlesClearCommand" Value="True"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1,0"/>
    </Style>




    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Red" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Background="{StaticResource MainColor}" CornerRadius="5" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type ScrollBar}" >
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <!--<Setter Property="Margin" Value="5,0,0,0"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>

                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">

                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                            </Track.Thumb>
                        </Track>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <Style TargetType="DataGrid" >
        <Setter Property="Margin" Value="10"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border  CornerRadius="10" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False"  Background="Transparent" CanContentScroll="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" 
                                                   Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Rectangle">
                <Setter Property="Stroke" Value="{x:Null}"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>

    
    
    

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="StandartHeader">
        <Setter Property="Opacity" Value="0.90"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Display Trial Md It"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent"
                                                     BorderThickness="{TemplateBinding BorderThickness}"  IsClickable="{TemplateBinding CanUserSort}"
                                                     IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}"
                                                     SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <Border x:Name="Border" Background="{StaticResource MainColor}" >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Left">
                            <Setter Property="CornerRadius" TargetName="Border" Value="10,0,0,10"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Right">
                            <Setter Property="CornerRadius" TargetName="Border" Value="0,10,10,0"/>
                        </Trigger>
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource StandartHeader}">
        <Setter Property="Tag" Value="Left"/>
    </Style>

    <Style x:Key="RightHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource StandartHeader}">
        <Setter Property="Tag" Value="Right"/>
    </Style>


        
        
        
        



    <Style TargetType="DataGridCell" x:Key="LeftDGCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="125"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Tag" Value="Left"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell" >
                    <Grid>
                        <Border x:Name="BorderShadow" Background="Transparent"
                                BorderBrush="Black" Margin="0,5"
                                BorderThickness="0 0.1, 0 1" >
                            <Border.Effect>
                                <BlurEffect Radius="5"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Border" BorderBrush="{StaticResource MainColor}" Margin="0,5"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">

                            <ContentPresenter x:Name="Presenter" VerticalAlignment="Center" 
                                              HorizontalAlignment="Center"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Left">
                            <Setter Property="HorizontalAlignment" TargetName="Presenter" Value="Left"/>
                            <Setter Property="Margin" TargetName="Presenter" Value="50,0,0,0"/>
                        </Trigger>

                        <Trigger Property="Tag" Value="Left">
                            <Setter Property="CornerRadius" TargetName="Border" Value="10,0,0,10"/>
                            <Setter Property="BorderThickness" TargetName="BorderShadow" Value="0.2 0.1, 0 1"/>
                            <Setter Property="CornerRadius" TargetName="BorderShadow" Value="10,0,0,10"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Right">
                            <Setter Property="CornerRadius" TargetName="Border" Value="0,10,10,0"/>
                            <Setter Property="BorderThickness" TargetName="BorderShadow" Value="0 0.1, 0.7 1"/>
                            <Setter Property="CornerRadius" TargetName="BorderShadow" Value="0,10,10,0"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="Left"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Border" Value="3,3,0,3"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="10,0,0,10"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="Right"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Border" Value="0,3,3,3"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="0,10,10,0"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
                <Setter Property="BorderThickness" Value="0,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RightDGCell" TargetType="DataGridCell" BasedOn="{StaticResource LeftDGCell}">
        <Setter Property="Tag" Value="Right"/>
    </Style>

    <Style x:Key="ContenLefttDGCell" TargetType="DataGridCell" BasedOn="{StaticResource LeftDGCell}">
        <Setter Property="Tag" Value="Standart"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="RContenLefttDGCell" TargetType="DataGridCell" BasedOn="{StaticResource LeftDGCell}">
        <Setter Property="Tag" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="LContenLefttDGCell" TargetType="DataGridCell" BasedOn="{StaticResource RContenLefttDGCell}">
        <Setter Property="Tag" Value="Left"/>
    </Style>


    <Style  TargetType="DataGridCell" BasedOn="{StaticResource LeftDGCell}">
        <Setter Property="Tag" Value="Standart"/>
    </Style>


    <Style TargetType="DataGridCell" x:Key="NumVehicle" BasedOn="{StaticResource LeftDGCell}">
        <Setter Property="Tag" Value="Standart"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell" >
                    <Grid>
                        <Border x:Name="BorderShadow" Background="Transparent"
                                BorderBrush="Black" Margin="0,5"
                                BorderThickness="0 0.1, 0 1" >
                            <Border.Effect>
                                <BlurEffect Radius="5"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Border" BorderBrush="{StaticResource MainColor}" Margin="0,5"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="True">
                            <Border BorderBrush="{StaticResource MaterialDesignBody}" BorderThickness="3" Height="35"
                                    HorizontalAlignment="Center" MinWidth="120" MaxHeight="120">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="Left"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Border" Value="3,3,0,3"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="10,0,0,10"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="Right"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Border" Value="0,3,3,3"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="0,10,10,0"/>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="Right">
                            <Setter Property="CornerRadius" TargetName="Border" Value="0,10,10,0"/>
                            <Setter Property="BorderThickness" TargetName="BorderShadow" Value="0 0.1, 0.7 1"/>
                            <Setter Property="CornerRadius" TargetName="BorderShadow" Value="0,10,10,0"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Left">
                            <Setter Property="CornerRadius" TargetName="Border" Value="10,0,0,10"/>
                            <Setter Property="BorderThickness" TargetName="BorderShadow" Value="0.2 0.1, 0 1"/>
                            <Setter Property="CornerRadius" TargetName="BorderShadow" Value="10,0,0,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
                <Setter Property="BorderThickness" Value="0,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border CornerRadius="5"
                            Background="White"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

   <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemMoreData">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignBody}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontFamily" Value="/Korsun_PP23;component/ResourceFolder/FontFamily/#GT Eesti Text Trial Md It"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid Margin="-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="13"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                            <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="9"/>
                            </Border>
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                            <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="#FF212121" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide" Placement="Right" VerticalOffset="-3">
                                <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="RightArrow" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemMoreData}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}" Background="White" SnapsToDevicePixels="True">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="13"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                            <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" CornerRadius="5" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                            </Border>
                            <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.ColumnSpan="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="#4CACACAC"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="#FFACACAC"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>




</ResourceDictionary>